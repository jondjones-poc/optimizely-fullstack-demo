import Head from 'next/head'
import React, { useEffect, useState } from "react";
import { v4 as uuidv4 } from 'uuid';

import { useRouter } from 'next/router'

import {
    createInstance
} from "@optimizely/optimizely-sdk";

const sdkKey = process.env.NEXT_PUBLIC_SDK_KEY;
const dataFileUrl = `https://cdn.optimizely.com/datafiles/${sdkKey}.json`;

export default function Landing({...props}) {

  const [ componentMessage, setComponentMessage ] = useState();
  const [ enabled, setEnabled ] = useState(false);
  const [ matchedSegment, setMatchedSegment ] = useState();

  const router = useRouter()

  const optimizelyClient = createInstance({
    datafile: props?.datafile,
  });

  const { segment = '' } = router.query
  const userId = uuidv4();

  let optimizelyUserContext;

  console.log('Segment', segment);

  optimizelyClient.onReady().then(() => {
    optimizelyUserContext = optimizelyClient.createUserContext(
      userId,
      {
        segment: segment,
        user: segment
      }
    );
  });

    useEffect(() => {
        optimizelyClient.onReady().then(() => {

        const decision  = optimizelyUserContext.decide('personalisation');
        console.log('personalisation-flag', decision);

        const componentMessage = decision.variables.component_message;
        setComponentMessage(componentMessage);
        setEnabled(decision.enabled);
        setMatchedSegment(decision.ruleKey);
        });
    }, [optimizelyUserContext, optimizelyClient]);

  return (
    <>
      <Head>

        <title>
          Optimizely Fullstack Javascript
        </title>

        <meta name="description" content="Generated by JonDJones" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {!enabled ?
        <section id="features">
          <div className="container" id="feature-container">
            <header>
              <h2>
                <strong>
                    Welcome generic user to this page
                </strong>
              </h2>
              <img src={`images/welcome.jpg`} />
            </header>
          </div>
          </section> : null
      }

      {enabled ?
        <section id="main">
          <div className="container">
            <header>
              <h2>
                <strong>
                  {componentMessage} you matched on {matchedSegment}
                </strong>
              </h2>
                <img src={`images/${process.env.NEXT_PUBLIC_CLIENT}${segment}.jpg`} />
            </header>
          </div>
        </section> : null
      }
    </>
  )
}

export async function getServerSideProps(context) {
  const response = await fetch(dataFileUrl);
  const datafile = await response.json();

  return {
    props: {
      datafile
    }
  }
}